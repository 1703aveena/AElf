syntax = "proto3";

option csharp_namespace = "AElf.Crosschain.Grpc";
import "common.proto";
import "crosschain.proto";

message RequestBlockInfo {
    int32 ChainId = 1; // parent(own) chain id
    uint64 NextHeight = 2;
}

message ResponseSideChainBlockInfo {
    SideChainBlockInfo BlockInfo = 1;
    bool Success = 2;
}

message ResponseParentChainBlockInfo {
    ParentChainBlockInfo BlockInfo = 1;
    bool Success = 2;
}

message IndexingRequestMessage{
    uint32 Port = 1;
    string Address = 2;
    int32 ChainId = 3;
}

message IndexingRequestResult{
    bool Result = 1;
}

service SideChainBlockInfoRpc {
    rpc IndexDuplexStreaming (stream RequestBlockInfo) returns (stream ResponseSideChainBlockInfo) {}
    rpc IndexServerStreaming (RequestBlockInfo) returns (stream ResponseSideChainBlockInfo) {}

}

service ParentChainBlockInfoRpc{
    rpc RecordDuplexStreaming (stream RequestBlockInfo) returns (stream ResponseParentChainBlockInfo) {}
    rpc RecordServerStreaming (RequestBlockInfo) returns (stream ResponseParentChainBlockInfo) {}
    rpc RequestIndexing(IndexingRequestMessage) returns (IndexingRequestResult){}
}

message MerkleProofMessage {
    repeated Hash BlockMerkleProof = 1;
    repeated Hash TransactionMerkleProof = 2;
}

message VerificationNeededMessage {
    int32 ChainId = 1;
    uint64 BlockHeight = 2; 
}

service MerkleProofInfoRpc {
    rpc MerkleProofInfo (VerificationNeededMessage) returns (MerkleProofMessage) {}
}





