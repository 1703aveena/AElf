// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: concurrency.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Kernel {

  /// <summary>Holder for reflection information generated from concurrency.proto</summary>
  public static partial class ConcurrencyReflection {

    #region Descriptor
    /// <summary>File descriptor for concurrency.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConcurrencyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFjb25jdXJyZW5jeS5wcm90bxoMa2VybmVsLnByb3RvGhlnb29nbGUvcHJv",
            "dG9idWYvYW55LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvIlAKEFN0YXRlVmFsdWVDaGFuZ2USEwoEUGF0aBgBIAEoCzIFLkhhc2gS",
            "EwoLQmVmb3JlVmFsdWUYAiABKAwSEgoKQWZ0ZXJWYWx1ZRgDIAEoDCLzAgoQ",
            "VHJhbnNhY3Rpb25UcmFjZRIcCg1UcmFuc2FjdGlvbklkGAEgASgLMgUuSGFz",
            "aBIOCgZSZXRWYWwYAiABKAwSDgoGU3RkT3V0GAMgASgJEg4KBlN0ZEVychgE",
            "IAEoCRIXCgRMb2dzGAUgAygLMgkuTG9nRXZlbnQSJwoMSW5saW5lVHJhY2Vz",
            "GAYgAygLMhEuVHJhbnNhY3Rpb25UcmFjZRInCgxWYWx1ZUNoYW5nZXMYByAD",
            "KAsyES5TdGF0ZVZhbHVlQ2hhbmdlEg8KB0VsYXBzZWQYCCABKAMSLQoJU3Rh",
            "cnRUaW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIrCgdF",
            "bmRUaW1lGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIXCg9B",
            "bHJlYWR5Q29tbWl0ZWQYCyABKAgSIAoNRmxhdHRlbmVkTG9ncxgMIAMoCzIJ",
            "LkxvZ0V2ZW50Ij8KCkV2ZW50RmllbGQSDAoETmFtZRgBIAEoCRIjCgVWYWx1",
            "ZRgCIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkiVgoITG9nRXZlbnQSFgoH",
            "QWRkcmVzcxgBIAEoCzIFLkhhc2gSFAoFVG9waWMYAiABKAsyBS5IYXNoEhwK",
            "B0RldGFpbHMYAyADKAsyCy5FdmVudEZpZWxkInMKEVRyYW5zYWN0aW9uUmVz",
            "dWx0EhwKDVRyYW5zYWN0aW9uSWQYASABKAsyBS5IYXNoEhcKBnN0YXR1cxgC",
            "IAEoDjIHLlN0YXR1cxIXCgRMb2dzGAMgAygLMgkuTG9nRXZlbnQSDgoGUmV0",
            "VmFsGAQgASgMIocCCiRTZXJpYWxpemVDb250cmFjdE1ldGFkYXRhVGVtcGxh",
            "dGVNYXAScQoeTWV0YWRhdGFUZW1wbGF0ZU1hcEZvckNvbnRyYWN0GAIgAygL",
            "MkkuU2VyaWFsaXplQ29udHJhY3RNZXRhZGF0YVRlbXBsYXRlTWFwLk1ldGFk",
            "YXRhVGVtcGxhdGVNYXBGb3JDb250cmFjdEVudHJ5GmwKI01ldGFkYXRhVGVt",
            "cGxhdGVNYXBGb3JDb250cmFjdEVudHJ5EgsKA2tleRgBIAEoCRI0CgV2YWx1",
            "ZRgCIAEoCzIlLlNlcmlhbGl6ZUZ1bmN0aW9uTWV0YWRhdGFUZW1wbGF0ZU1h",
            "cDoCOAEiwgEKJFNlcmlhbGl6ZUZ1bmN0aW9uTWV0YWRhdGFUZW1wbGF0ZU1h",
            "cBJLCgtUZW1wbGF0ZU1hcBgCIAMoCzI2LlNlcmlhbGl6ZUZ1bmN0aW9uTWV0",
            "YWRhdGFUZW1wbGF0ZU1hcC5UZW1wbGF0ZU1hcEVudHJ5Gk0KEFRlbXBsYXRl",
            "TWFwRW50cnkSCwoDa2V5GAEgASgJEigKBXZhbHVlGAIgASgLMhkuRnVuY3Rp",
            "b25NZXRhZGF0YVRlbXBsYXRlOgI4ASJlChhGdW5jdGlvbk1ldGFkYXRhVGVt",
            "cGxhdGUSGwoTU2VyaWFsaXplQ2FsbGluZ1NldBgBIAMoCRIsChlTZXJpYWxp",
            "emVMb2NhbFJlc291cmNlU2V0GAIgAygLMgkuUmVzb3VyY2UiQQoIUmVzb3Vy",
            "Y2USDAoETmFtZRgBIAEoCRInCg5EYXRhQWNjZXNzTW9kZRgCIAEoDjIPLkRh",
            "dGFBY2Nlc3NNb2RlIooBChBGdW5jdGlvbk1ldGFkYXRhEhsKE1NlcmlhbGl6",
            "ZUNhbGxpbmdTZXQYASADKAkSKwoYU2VyaWFsaXplRnVsbFJlc291cmNlU2V0",
            "GAIgAygLMgkuUmVzb3VyY2USLAoZU2VyaWFsaXplTG9jYWxSZXNvdXJjZVNl",
            "dBgDIAMoCzIJLlJlc291cmNlIqoBChxTZXJpYWxpemVGdW5jdGlvbk1ldGFk",
            "YXRhTWFwEkMKC01ldGFkYXRhTWFwGAEgAygLMi4uU2VyaWFsaXplRnVuY3Rp",
            "b25NZXRhZGF0YU1hcC5NZXRhZGF0YU1hcEVudHJ5GkUKEE1ldGFkYXRhTWFw",
            "RW50cnkSCwoDa2V5GAEgASgJEiAKBXZhbHVlGAIgASgLMhEuRnVuY3Rpb25N",
            "ZXRhZGF0YToCOAEiLgoRQ2FsbGluZ0dyYXBoRWRnZXMSGQoFRWRnZXMYASAD",
            "KAsyCi5HcmFwaEVkZ2UiKwoJR3JhcGhFZGdlEg4KBlNvdXJjZRgBIAEoCRIO",
            "CgZUYXJnZXQYAiABKAkqPAoGU3RhdHVzEg4KCk5vdEV4aXN0ZWQQABILCgdQ",
            "ZW5kaW5nEAESCgoGRmFpbGVkEAISCQoFTWluZWQQAypeCg5EYXRhQWNjZXNz",
            "TW9kZRIaChZSZWFkT25seUFjY291bnRTaGFyaW5nEAASGwoXUmVhZFdyaXRl",
            "QWNjb3VudFNoYXJpbmcQARITCg9BY2NvdW50U3BlY2lmaWMQAkIOqgILQUVs",
            "Zi5LZXJuZWxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Kernel.KernelReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AElf.Kernel.Status), typeof(global::AElf.Kernel.DataAccessMode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.StateValueChange), global::AElf.Kernel.StateValueChange.Parser, new[]{ "Path", "BeforeValue", "AfterValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.EventField), global::AElf.Kernel.EventField.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.LogEvent), global::AElf.Kernel.LogEvent.Parser, new[]{ "Address", "Topic", "Details" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.TransactionResult), global::AElf.Kernel.TransactionResult.Parser, new[]{ "TransactionId", "Status", "Logs", "RetVal" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.SerializeContractMetadataTemplateMap), global::AElf.Kernel.SerializeContractMetadataTemplateMap.Parser, new[]{ "MetadataTemplateMapForContract" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.SerializeFunctionMetadataTemplateMap), global::AElf.Kernel.SerializeFunctionMetadataTemplateMap.Parser, new[]{ "TemplateMap" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.FunctionMetadataTemplate), global::AElf.Kernel.FunctionMetadataTemplate.Parser, new[]{ "SerializeCallingSet", "SerializeLocalResourceSet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Resource), global::AElf.Kernel.Resource.Parser, new[]{ "Name", "DataAccessMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.FunctionMetadata), global::AElf.Kernel.FunctionMetadata.Parser, new[]{ "SerializeCallingSet", "SerializeFullResourceSet", "SerializeLocalResourceSet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.SerializeFunctionMetadataMap), global::AElf.Kernel.SerializeFunctionMetadataMap.Parser, new[]{ "MetadataMap" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.CallingGraphEdges), global::AElf.Kernel.CallingGraphEdges.Parser, new[]{ "Edges" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.GraphEdge), global::AElf.Kernel.GraphEdge.Parser, new[]{ "Source", "Target" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Status {
    [pbr::OriginalName("NotExisted")] NotExisted = 0,
    [pbr::OriginalName("Pending")] Pending = 1,
    [pbr::OriginalName("Failed")] Failed = 2,
    [pbr::OriginalName("Mined")] Mined = 3,
  }

  public enum DataAccessMode {
    [pbr::OriginalName("ReadOnlyAccountSharing")] ReadOnlyAccountSharing = 0,
    [pbr::OriginalName("ReadWriteAccountSharing")] ReadWriteAccountSharing = 1,
    [pbr::OriginalName("AccountSpecific")] AccountSpecific = 2,
  }

  #endregion

  #region Messages
  public sealed partial class StateValueChange : pb::IMessage<StateValueChange> {
    private static readonly pb::MessageParser<StateValueChange> _parser = new pb::MessageParser<StateValueChange>(() => new StateValueChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StateValueChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateValueChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateValueChange(StateValueChange other) : this() {
      Path = other.path_ != null ? other.Path.Clone() : null;
      beforeValue_ = other.beforeValue_;
      afterValue_ = other.afterValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateValueChange Clone() {
      return new StateValueChange(this);
    }

    /// <summary>Field number for the "Path" field.</summary>
    public const int PathFieldNumber = 1;
    private global::AElf.Kernel.Hash path_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Path {
      get { return path_; }
      set {
        path_ = value;
      }
    }

    /// <summary>Field number for the "BeforeValue" field.</summary>
    public const int BeforeValueFieldNumber = 2;
    private pb::ByteString beforeValue_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BeforeValue {
      get { return beforeValue_; }
      set {
        beforeValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AfterValue" field.</summary>
    public const int AfterValueFieldNumber = 3;
    private pb::ByteString afterValue_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AfterValue {
      get { return afterValue_; }
      set {
        afterValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StateValueChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StateValueChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Path, other.Path)) return false;
      if (BeforeValue != other.BeforeValue) return false;
      if (AfterValue != other.AfterValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (path_ != null) hash ^= Path.GetHashCode();
      if (BeforeValue.Length != 0) hash ^= BeforeValue.GetHashCode();
      if (AfterValue.Length != 0) hash ^= AfterValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (path_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Path);
      }
      if (BeforeValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BeforeValue);
      }
      if (AfterValue.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(AfterValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (path_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Path);
      }
      if (BeforeValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BeforeValue);
      }
      if (AfterValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AfterValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StateValueChange other) {
      if (other == null) {
        return;
      }
      if (other.path_ != null) {
        if (path_ == null) {
          path_ = new global::AElf.Kernel.Hash();
        }
        Path.MergeFrom(other.Path);
      }
      if (other.BeforeValue.Length != 0) {
        BeforeValue = other.BeforeValue;
      }
      if (other.AfterValue.Length != 0) {
        AfterValue = other.AfterValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (path_ == null) {
              path_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(path_);
            break;
          }
          case 18: {
            BeforeValue = input.ReadBytes();
            break;
          }
          case 26: {
            AfterValue = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

//  public sealed partial class TransactionTrace : pb::IMessage<TransactionTrace> {
//    private static readonly pb::MessageParser<TransactionTrace> _parser = new pb::MessageParser<TransactionTrace>(() => new TransactionTrace());
//    private pb::UnknownFieldSet _unknownFields;
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public static pb::MessageParser<TransactionTrace> Parser { get { return _parser; } }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public static pbr::MessageDescriptor Descriptor {
//      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[1]; }
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    pbr::MessageDescriptor pb::IMessage.Descriptor {
//      get { return Descriptor; }
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public TransactionTrace() {
//      OnConstruction();
//    }
//
//    partial void OnConstruction();
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public TransactionTrace(TransactionTrace other) : this() {
//      TransactionId = other.transactionId_ != null ? other.TransactionId.Clone() : null;
//      retVal_ = other.retVal_;
//      stdOut_ = other.stdOut_;
//      stdErr_ = other.stdErr_;
//      logs_ = other.logs_.Clone();
//      inlineTraces_ = other.inlineTraces_.Clone();
//      valueChanges_ = other.valueChanges_.Clone();
//      elapsed_ = other.elapsed_;
//      StartTime = other.startTime_ != null ? other.StartTime.Clone() : null;
//      EndTime = other.endTime_ != null ? other.EndTime.Clone() : null;
//      alreadyCommited_ = other.alreadyCommited_;
//      flattenedLogs_ = other.flattenedLogs_.Clone();
//      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public TransactionTrace Clone() {
//      return new TransactionTrace(this);
//    }
//
//    /// <summary>Field number for the "TransactionId" field.</summary>
//    public const int TransactionIdFieldNumber = 1;
//    private global::AElf.Kernel.Hash transactionId_;
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public global::AElf.Kernel.Hash TransactionId {
//      get { return transactionId_; }
//      set {
//        transactionId_ = value;
//      }
//    }
//
//    /// <summary>Field number for the "RetVal" field.</summary>
//    public const int RetValFieldNumber = 2;
//    private pb::ByteString retVal_ = pb::ByteString.Empty;
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public pb::ByteString RetVal {
//      get { return retVal_; }
//      set {
//        retVal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
//      }
//    }
//
//    /// <summary>Field number for the "StdOut" field.</summary>
//    public const int StdOutFieldNumber = 3;
//    private string stdOut_ = "";
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public string StdOut {
//      get { return stdOut_; }
//      set {
//        stdOut_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
//      }
//    }
//
//    /// <summary>Field number for the "StdErr" field.</summary>
//    public const int StdErrFieldNumber = 4;
//    private string stdErr_ = "";
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public string StdErr {
//      get { return stdErr_; }
//      set {
//        stdErr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
//      }
//    }
//
//    /// <summary>Field number for the "Logs" field.</summary>
//    public const int LogsFieldNumber = 5;
//    private static readonly pb::FieldCodec<global::AElf.Kernel.LogEvent> _repeated_logs_codec
//        = pb::FieldCodec.ForMessage(42, global::AElf.Kernel.LogEvent.Parser);
//    private readonly pbc::RepeatedField<global::AElf.Kernel.LogEvent> logs_ = new pbc::RepeatedField<global::AElf.Kernel.LogEvent>();
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public pbc::RepeatedField<global::AElf.Kernel.LogEvent> Logs {
//      get { return logs_; }
//    }
//
//    /// <summary>Field number for the "InlineTraces" field.</summary>
//    public const int InlineTracesFieldNumber = 6;
//    private static readonly pb::FieldCodec<global::AElf.Kernel.TransactionTrace> _repeated_inlineTraces_codec
//        = pb::FieldCodec.ForMessage(50, global::AElf.Kernel.TransactionTrace.Parser);
//    private readonly pbc::RepeatedField<global::AElf.Kernel.TransactionTrace> inlineTraces_ = new pbc::RepeatedField<global::AElf.Kernel.TransactionTrace>();
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public pbc::RepeatedField<global::AElf.Kernel.TransactionTrace> InlineTraces {
//      get { return inlineTraces_; }
//    }
//
//    /// <summary>Field number for the "ValueChanges" field.</summary>
//    public const int ValueChangesFieldNumber = 7;
//    private static readonly pb::FieldCodec<global::AElf.Kernel.StateValueChange> _repeated_valueChanges_codec
//        = pb::FieldCodec.ForMessage(58, global::AElf.Kernel.StateValueChange.Parser);
//    private readonly pbc::RepeatedField<global::AElf.Kernel.StateValueChange> valueChanges_ = new pbc::RepeatedField<global::AElf.Kernel.StateValueChange>();
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public pbc::RepeatedField<global::AElf.Kernel.StateValueChange> ValueChanges {
//      get { return valueChanges_; }
//    }
//
//    /// <summary>Field number for the "Elapsed" field.</summary>
//    public const int ElapsedFieldNumber = 8;
//    private long elapsed_;
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public long Elapsed {
//      get { return elapsed_; }
//      set {
//        elapsed_ = value;
//      }
//    }
//
//    /// <summary>Field number for the "StartTime" field.</summary>
//    public const int StartTimeFieldNumber = 9;
//    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
//      get { return startTime_; }
//      set {
//        startTime_ = value;
//      }
//    }
//
//    /// <summary>Field number for the "EndTime" field.</summary>
//    public const int EndTimeFieldNumber = 10;
//    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
//      get { return endTime_; }
//      set {
//        endTime_ = value;
//      }
//    }
//
//    /// <summary>Field number for the "AlreadyCommited" field.</summary>
//    public const int AlreadyCommitedFieldNumber = 11;
//    private bool alreadyCommited_;
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public bool AlreadyCommited {
//      get { return alreadyCommited_; }
//      set {
//        alreadyCommited_ = value;
//      }
//    }
//
//    /// <summary>Field number for the "FlattenedLogs" field.</summary>
//    public const int FlattenedLogsFieldNumber = 12;
//    private static readonly pb::FieldCodec<global::AElf.Kernel.LogEvent> _repeated_flattenedLogs_codec
//        = pb::FieldCodec.ForMessage(98, global::AElf.Kernel.LogEvent.Parser);
//    private readonly pbc::RepeatedField<global::AElf.Kernel.LogEvent> flattenedLogs_ = new pbc::RepeatedField<global::AElf.Kernel.LogEvent>();
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public pbc::RepeatedField<global::AElf.Kernel.LogEvent> FlattenedLogs {
//      get { return flattenedLogs_; }
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public override bool Equals(object other) {
//      return Equals(other as TransactionTrace);
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public bool Equals(TransactionTrace other) {
//      if (ReferenceEquals(other, null)) {
//        return false;
//      }
//      if (ReferenceEquals(other, this)) {
//        return true;
//      }
//      if (!object.Equals(TransactionId, other.TransactionId)) return false;
//      if (RetVal != other.RetVal) return false;
//      if (StdOut != other.StdOut) return false;
//      if (StdErr != other.StdErr) return false;
//      if(!logs_.Equals(other.logs_)) return false;
//      if(!inlineTraces_.Equals(other.inlineTraces_)) return false;
//      if(!valueChanges_.Equals(other.valueChanges_)) return false;
//      if (Elapsed != other.Elapsed) return false;
//      if (!object.Equals(StartTime, other.StartTime)) return false;
//      if (!object.Equals(EndTime, other.EndTime)) return false;
//      if (AlreadyCommited != other.AlreadyCommited) return false;
//      if(!flattenedLogs_.Equals(other.flattenedLogs_)) return false;
//      return Equals(_unknownFields, other._unknownFields);
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public override int GetHashCode() {
//      int hash = 1;
//      if (transactionId_ != null) hash ^= TransactionId.GetHashCode();
//      if (RetVal.Length != 0) hash ^= RetVal.GetHashCode();
//      if (StdOut.Length != 0) hash ^= StdOut.GetHashCode();
//      if (StdErr.Length != 0) hash ^= StdErr.GetHashCode();
//      hash ^= logs_.GetHashCode();
//      hash ^= inlineTraces_.GetHashCode();
//      hash ^= valueChanges_.GetHashCode();
//      if (Elapsed != 0L) hash ^= Elapsed.GetHashCode();
//      if (startTime_ != null) hash ^= StartTime.GetHashCode();
//      if (endTime_ != null) hash ^= EndTime.GetHashCode();
//      if (AlreadyCommited != false) hash ^= AlreadyCommited.GetHashCode();
//      hash ^= flattenedLogs_.GetHashCode();
//      if (_unknownFields != null) {
//        hash ^= _unknownFields.GetHashCode();
//      }
//      return hash;
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public override string ToString() {
//      return pb::JsonFormatter.ToDiagnosticString(this);
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public void WriteTo(pb::CodedOutputStream output) {
//      if (transactionId_ != null) {
//        output.WriteRawTag(10);
//        output.WriteMessage(TransactionId);
//      }
//      if (RetVal.Length != 0) {
//        output.WriteRawTag(18);
//        output.WriteBytes(RetVal);
//      }
//      if (StdOut.Length != 0) {
//        output.WriteRawTag(26);
//        output.WriteString(StdOut);
//      }
//      if (StdErr.Length != 0) {
//        output.WriteRawTag(34);
//        output.WriteString(StdErr);
//      }
//      logs_.WriteTo(output, _repeated_logs_codec);
//      inlineTraces_.WriteTo(output, _repeated_inlineTraces_codec);
//      valueChanges_.WriteTo(output, _repeated_valueChanges_codec);
//      if (Elapsed != 0L) {
//        output.WriteRawTag(64);
//        output.WriteInt64(Elapsed);
//      }
//      if (startTime_ != null) {
//        output.WriteRawTag(74);
//        output.WriteMessage(StartTime);
//      }
//      if (endTime_ != null) {
//        output.WriteRawTag(82);
//        output.WriteMessage(EndTime);
//      }
//      if (AlreadyCommited != false) {
//        output.WriteRawTag(88);
//        output.WriteBool(AlreadyCommited);
//      }
//      flattenedLogs_.WriteTo(output, _repeated_flattenedLogs_codec);
//      if (_unknownFields != null) {
//        _unknownFields.WriteTo(output);
//      }
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public int CalculateSize() {
//      int size = 0;
//      if (transactionId_ != null) {
//        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionId);
//      }
//      if (RetVal.Length != 0) {
//        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RetVal);
//      }
//      if (StdOut.Length != 0) {
//        size += 1 + pb::CodedOutputStream.ComputeStringSize(StdOut);
//      }
//      if (StdErr.Length != 0) {
//        size += 1 + pb::CodedOutputStream.ComputeStringSize(StdErr);
//      }
//      size += logs_.CalculateSize(_repeated_logs_codec);
//      size += inlineTraces_.CalculateSize(_repeated_inlineTraces_codec);
//      size += valueChanges_.CalculateSize(_repeated_valueChanges_codec);
//      if (Elapsed != 0L) {
//        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Elapsed);
//      }
//      if (startTime_ != null) {
//        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
//      }
//      if (endTime_ != null) {
//        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
//      }
//      if (AlreadyCommited != false) {
//        size += 1 + 1;
//      }
//      size += flattenedLogs_.CalculateSize(_repeated_flattenedLogs_codec);
//      if (_unknownFields != null) {
//        size += _unknownFields.CalculateSize();
//      }
//      return size;
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public void MergeFrom(TransactionTrace other) {
//      if (other == null) {
//        return;
//      }
//      if (other.transactionId_ != null) {
//        if (transactionId_ == null) {
//          transactionId_ = new global::AElf.Kernel.Hash();
//        }
//        TransactionId.MergeFrom(other.TransactionId);
//      }
//      if (other.RetVal.Length != 0) {
//        RetVal = other.RetVal;
//      }
//      if (other.StdOut.Length != 0) {
//        StdOut = other.StdOut;
//      }
//      if (other.StdErr.Length != 0) {
//        StdErr = other.StdErr;
//      }
//      logs_.Add(other.logs_);
//      inlineTraces_.Add(other.inlineTraces_);
//      valueChanges_.Add(other.valueChanges_);
//      if (other.Elapsed != 0L) {
//        Elapsed = other.Elapsed;
//      }
//      if (other.startTime_ != null) {
//        if (startTime_ == null) {
//          startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
//        }
//        StartTime.MergeFrom(other.StartTime);
//      }
//      if (other.endTime_ != null) {
//        if (endTime_ == null) {
//          endTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
//        }
//        EndTime.MergeFrom(other.EndTime);
//      }
//      if (other.AlreadyCommited != false) {
//        AlreadyCommited = other.AlreadyCommited;
//      }
//      flattenedLogs_.Add(other.flattenedLogs_);
//      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
//    }
//
//    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
//    public void MergeFrom(pb::CodedInputStream input) {
//      uint tag;
//      while ((tag = input.ReadTag()) != 0) {
//        switch(tag) {
//          default:
//            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
//            break;
//          case 10: {
//            if (transactionId_ == null) {
//              transactionId_ = new global::AElf.Kernel.Hash();
//            }
//            input.ReadMessage(transactionId_);
//            break;
//          }
//          case 18: {
//            RetVal = input.ReadBytes();
//            break;
//          }
//          case 26: {
//            StdOut = input.ReadString();
//            break;
//          }
//          case 34: {
//            StdErr = input.ReadString();
//            break;
//          }
//          case 42: {
//            logs_.AddEntriesFrom(input, _repeated_logs_codec);
//            break;
//          }
//          case 50: {
//            inlineTraces_.AddEntriesFrom(input, _repeated_inlineTraces_codec);
//            break;
//          }
//          case 58: {
//            valueChanges_.AddEntriesFrom(input, _repeated_valueChanges_codec);
//            break;
//          }
//          case 64: {
//            Elapsed = input.ReadInt64();
//            break;
//          }
//          case 74: {
//            if (startTime_ == null) {
//              startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
//            }
//            input.ReadMessage(startTime_);
//            break;
//          }
//          case 82: {
//            if (endTime_ == null) {
//              endTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
//            }
//            input.ReadMessage(endTime_);
//            break;
//          }
//          case 88: {
//            AlreadyCommited = input.ReadBool();
//            break;
//          }
//          case 98: {
//            flattenedLogs_.AddEntriesFrom(input, _repeated_flattenedLogs_codec);
//            break;
//          }
//        }
//      }
//    }
//
//  }

  public sealed partial class EventField : pb::IMessage<EventField> {
    private static readonly pb::MessageParser<EventField> _parser = new pb::MessageParser<EventField>(() => new EventField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventField(EventField other) : this() {
      name_ = other.name_;
      Value = other.value_ != null ? other.Value.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventField Clone() {
      return new EventField(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventField other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              value_ = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogEvent : pb::IMessage<LogEvent> {
    private static readonly pb::MessageParser<LogEvent> _parser = new pb::MessageParser<LogEvent>(() => new LogEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEvent(LogEvent other) : this() {
      Address = other.address_ != null ? other.Address.Clone() : null;
      Topic = other.topic_ != null ? other.Topic.Clone() : null;
      details_ = other.details_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEvent Clone() {
      return new LogEvent(this);
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::AElf.Kernel.Hash address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "Topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private global::AElf.Kernel.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "Details" field.</summary>
    public const int DetailsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AElf.Kernel.EventField> _repeated_details_codec
        = pb::FieldCodec.ForMessage(26, global::AElf.Kernel.EventField.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.EventField> details_ = new pbc::RepeatedField<global::AElf.Kernel.EventField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.EventField> Details {
      get { return details_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(Topic, other.Topic)) return false;
      if(!details_.Equals(other.details_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (topic_ != null) hash ^= Topic.GetHashCode();
      hash ^= details_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (topic_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Topic);
      }
      details_.WriteTo(output, _repeated_details_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      size += details_.CalculateSize(_repeated_details_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogEvent other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::AElf.Kernel.Hash();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          topic_ = new global::AElf.Kernel.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      details_.Add(other.details_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              address_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(address_);
            break;
          }
          case 18: {
            if (topic_ == null) {
              topic_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(topic_);
            break;
          }
          case 26: {
            details_.AddEntriesFrom(input, _repeated_details_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionResult : pb::IMessage<TransactionResult> {
    private static readonly pb::MessageParser<TransactionResult> _parser = new pb::MessageParser<TransactionResult>(() => new TransactionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionResult(TransactionResult other) : this() {
      TransactionId = other.transactionId_ != null ? other.TransactionId.Clone() : null;
      status_ = other.status_;
      logs_ = other.logs_.Clone();
      retVal_ = other.retVal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionResult Clone() {
      return new TransactionResult(this);
    }

    /// <summary>Field number for the "TransactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private global::AElf.Kernel.Hash transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Hash TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::AElf.Kernel.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Logs" field.</summary>
    public const int LogsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AElf.Kernel.LogEvent> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(26, global::AElf.Kernel.LogEvent.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.LogEvent> logs_ = new pbc::RepeatedField<global::AElf.Kernel.LogEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.LogEvent> Logs {
      get { return logs_; }
    }

    /// <summary>Field number for the "RetVal" field.</summary>
    public const int RetValFieldNumber = 4;
    private pb::ByteString retVal_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RetVal {
      get { return retVal_; }
      set {
        retVal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TransactionId, other.TransactionId)) return false;
      if (Status != other.Status) return false;
      if(!logs_.Equals(other.logs_)) return false;
      if (RetVal != other.RetVal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transactionId_ != null) hash ^= TransactionId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= logs_.GetHashCode();
      if (RetVal.Length != 0) hash ^= RetVal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transactionId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TransactionId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      logs_.WriteTo(output, _repeated_logs_codec);
      if (RetVal.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(RetVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transactionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (RetVal.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RetVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionResult other) {
      if (other == null) {
        return;
      }
      if (other.transactionId_ != null) {
        if (transactionId_ == null) {
          transactionId_ = new global::AElf.Kernel.Hash();
        }
        TransactionId.MergeFrom(other.TransactionId);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      logs_.Add(other.logs_);
      if (other.RetVal.Length != 0) {
        RetVal = other.RetVal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transactionId_ == null) {
              transactionId_ = new global::AElf.Kernel.Hash();
            }
            input.ReadMessage(transactionId_);
            break;
          }
          case 16: {
            status_ = (global::AElf.Kernel.Status) input.ReadEnum();
            break;
          }
          case 26: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
          case 34: {
            RetVal = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SerializeContractMetadataTemplateMap : pb::IMessage<SerializeContractMetadataTemplateMap> {
    private static readonly pb::MessageParser<SerializeContractMetadataTemplateMap> _parser = new pb::MessageParser<SerializeContractMetadataTemplateMap>(() => new SerializeContractMetadataTemplateMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SerializeContractMetadataTemplateMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeContractMetadataTemplateMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeContractMetadataTemplateMap(SerializeContractMetadataTemplateMap other) : this() {
      metadataTemplateMapForContract_ = other.metadataTemplateMapForContract_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeContractMetadataTemplateMap Clone() {
      return new SerializeContractMetadataTemplateMap(this);
    }

    /// <summary>Field number for the "MetadataTemplateMapForContract" field.</summary>
    public const int MetadataTemplateMapForContractFieldNumber = 2;
    private static readonly pbc::MapField<string, global::AElf.Kernel.SerializeFunctionMetadataTemplateMap>.Codec _map_metadataTemplateMapForContract_codec
        = new pbc::MapField<string, global::AElf.Kernel.SerializeFunctionMetadataTemplateMap>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::AElf.Kernel.SerializeFunctionMetadataTemplateMap.Parser), 18);
    private readonly pbc::MapField<string, global::AElf.Kernel.SerializeFunctionMetadataTemplateMap> metadataTemplateMapForContract_ = new pbc::MapField<string, global::AElf.Kernel.SerializeFunctionMetadataTemplateMap>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::AElf.Kernel.SerializeFunctionMetadataTemplateMap> MetadataTemplateMapForContract {
      get { return metadataTemplateMapForContract_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SerializeContractMetadataTemplateMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SerializeContractMetadataTemplateMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MetadataTemplateMapForContract.Equals(other.MetadataTemplateMapForContract)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MetadataTemplateMapForContract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      metadataTemplateMapForContract_.WriteTo(output, _map_metadataTemplateMapForContract_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metadataTemplateMapForContract_.CalculateSize(_map_metadataTemplateMapForContract_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SerializeContractMetadataTemplateMap other) {
      if (other == null) {
        return;
      }
      metadataTemplateMapForContract_.Add(other.metadataTemplateMapForContract_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            metadataTemplateMapForContract_.AddEntriesFrom(input, _map_metadataTemplateMapForContract_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SerializeFunctionMetadataTemplateMap : pb::IMessage<SerializeFunctionMetadataTemplateMap> {
    private static readonly pb::MessageParser<SerializeFunctionMetadataTemplateMap> _parser = new pb::MessageParser<SerializeFunctionMetadataTemplateMap>(() => new SerializeFunctionMetadataTemplateMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SerializeFunctionMetadataTemplateMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeFunctionMetadataTemplateMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeFunctionMetadataTemplateMap(SerializeFunctionMetadataTemplateMap other) : this() {
      templateMap_ = other.templateMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeFunctionMetadataTemplateMap Clone() {
      return new SerializeFunctionMetadataTemplateMap(this);
    }

    /// <summary>Field number for the "TemplateMap" field.</summary>
    public const int TemplateMapFieldNumber = 2;
    private static readonly pbc::MapField<string, global::AElf.Kernel.FunctionMetadataTemplate>.Codec _map_templateMap_codec
        = new pbc::MapField<string, global::AElf.Kernel.FunctionMetadataTemplate>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::AElf.Kernel.FunctionMetadataTemplate.Parser), 18);
    private readonly pbc::MapField<string, global::AElf.Kernel.FunctionMetadataTemplate> templateMap_ = new pbc::MapField<string, global::AElf.Kernel.FunctionMetadataTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::AElf.Kernel.FunctionMetadataTemplate> TemplateMap {
      get { return templateMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SerializeFunctionMetadataTemplateMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SerializeFunctionMetadataTemplateMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!TemplateMap.Equals(other.TemplateMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= TemplateMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      templateMap_.WriteTo(output, _map_templateMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += templateMap_.CalculateSize(_map_templateMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SerializeFunctionMetadataTemplateMap other) {
      if (other == null) {
        return;
      }
      templateMap_.Add(other.templateMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            templateMap_.AddEntriesFrom(input, _map_templateMap_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FunctionMetadataTemplate : pb::IMessage<FunctionMetadataTemplate> {
    private static readonly pb::MessageParser<FunctionMetadataTemplate> _parser = new pb::MessageParser<FunctionMetadataTemplate>(() => new FunctionMetadataTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FunctionMetadataTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionMetadataTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionMetadataTemplate(FunctionMetadataTemplate other) : this() {
      serializeCallingSet_ = other.serializeCallingSet_.Clone();
      serializeLocalResourceSet_ = other.serializeLocalResourceSet_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionMetadataTemplate Clone() {
      return new FunctionMetadataTemplate(this);
    }

    /// <summary>Field number for the "SerializeCallingSet" field.</summary>
    public const int SerializeCallingSetFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_serializeCallingSet_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> serializeCallingSet_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SerializeCallingSet {
      get { return serializeCallingSet_; }
    }

    /// <summary>Field number for the "SerializeLocalResourceSet" field.</summary>
    public const int SerializeLocalResourceSetFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Kernel.Resource> _repeated_serializeLocalResourceSet_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Kernel.Resource.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.Resource> serializeLocalResourceSet_ = new pbc::RepeatedField<global::AElf.Kernel.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.Resource> SerializeLocalResourceSet {
      get { return serializeLocalResourceSet_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FunctionMetadataTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FunctionMetadataTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serializeCallingSet_.Equals(other.serializeCallingSet_)) return false;
      if(!serializeLocalResourceSet_.Equals(other.serializeLocalResourceSet_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serializeCallingSet_.GetHashCode();
      hash ^= serializeLocalResourceSet_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serializeCallingSet_.WriteTo(output, _repeated_serializeCallingSet_codec);
      serializeLocalResourceSet_.WriteTo(output, _repeated_serializeLocalResourceSet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serializeCallingSet_.CalculateSize(_repeated_serializeCallingSet_codec);
      size += serializeLocalResourceSet_.CalculateSize(_repeated_serializeLocalResourceSet_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FunctionMetadataTemplate other) {
      if (other == null) {
        return;
      }
      serializeCallingSet_.Add(other.serializeCallingSet_);
      serializeLocalResourceSet_.Add(other.serializeLocalResourceSet_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            serializeCallingSet_.AddEntriesFrom(input, _repeated_serializeCallingSet_codec);
            break;
          }
          case 18: {
            serializeLocalResourceSet_.AddEntriesFrom(input, _repeated_serializeLocalResourceSet_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Resource : pb::IMessage<Resource> {
    private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource(Resource other) : this() {
      name_ = other.name_;
      dataAccessMode_ = other.dataAccessMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource Clone() {
      return new Resource(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DataAccessMode" field.</summary>
    public const int DataAccessModeFieldNumber = 2;
    private global::AElf.Kernel.DataAccessMode dataAccessMode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.DataAccessMode DataAccessMode {
      get { return dataAccessMode_; }
      set {
        dataAccessMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DataAccessMode != other.DataAccessMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DataAccessMode != 0) hash ^= DataAccessMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DataAccessMode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DataAccessMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DataAccessMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataAccessMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resource other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DataAccessMode != 0) {
        DataAccessMode = other.DataAccessMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            dataAccessMode_ = (global::AElf.Kernel.DataAccessMode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FunctionMetadata : pb::IMessage<FunctionMetadata> {
    private static readonly pb::MessageParser<FunctionMetadata> _parser = new pb::MessageParser<FunctionMetadata>(() => new FunctionMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FunctionMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionMetadata(FunctionMetadata other) : this() {
      serializeCallingSet_ = other.serializeCallingSet_.Clone();
      serializeFullResourceSet_ = other.serializeFullResourceSet_.Clone();
      serializeLocalResourceSet_ = other.serializeLocalResourceSet_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionMetadata Clone() {
      return new FunctionMetadata(this);
    }

    /// <summary>Field number for the "SerializeCallingSet" field.</summary>
    public const int SerializeCallingSetFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_serializeCallingSet_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> serializeCallingSet_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SerializeCallingSet {
      get { return serializeCallingSet_; }
    }

    /// <summary>Field number for the "SerializeFullResourceSet" field.</summary>
    public const int SerializeFullResourceSetFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Kernel.Resource> _repeated_serializeFullResourceSet_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Kernel.Resource.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.Resource> serializeFullResourceSet_ = new pbc::RepeatedField<global::AElf.Kernel.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.Resource> SerializeFullResourceSet {
      get { return serializeFullResourceSet_; }
    }

    /// <summary>Field number for the "SerializeLocalResourceSet" field.</summary>
    public const int SerializeLocalResourceSetFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AElf.Kernel.Resource> _repeated_serializeLocalResourceSet_codec
        = pb::FieldCodec.ForMessage(26, global::AElf.Kernel.Resource.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.Resource> serializeLocalResourceSet_ = new pbc::RepeatedField<global::AElf.Kernel.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.Resource> SerializeLocalResourceSet {
      get { return serializeLocalResourceSet_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FunctionMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FunctionMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serializeCallingSet_.Equals(other.serializeCallingSet_)) return false;
      if(!serializeFullResourceSet_.Equals(other.serializeFullResourceSet_)) return false;
      if(!serializeLocalResourceSet_.Equals(other.serializeLocalResourceSet_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serializeCallingSet_.GetHashCode();
      hash ^= serializeFullResourceSet_.GetHashCode();
      hash ^= serializeLocalResourceSet_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serializeCallingSet_.WriteTo(output, _repeated_serializeCallingSet_codec);
      serializeFullResourceSet_.WriteTo(output, _repeated_serializeFullResourceSet_codec);
      serializeLocalResourceSet_.WriteTo(output, _repeated_serializeLocalResourceSet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serializeCallingSet_.CalculateSize(_repeated_serializeCallingSet_codec);
      size += serializeFullResourceSet_.CalculateSize(_repeated_serializeFullResourceSet_codec);
      size += serializeLocalResourceSet_.CalculateSize(_repeated_serializeLocalResourceSet_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FunctionMetadata other) {
      if (other == null) {
        return;
      }
      serializeCallingSet_.Add(other.serializeCallingSet_);
      serializeFullResourceSet_.Add(other.serializeFullResourceSet_);
      serializeLocalResourceSet_.Add(other.serializeLocalResourceSet_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            serializeCallingSet_.AddEntriesFrom(input, _repeated_serializeCallingSet_codec);
            break;
          }
          case 18: {
            serializeFullResourceSet_.AddEntriesFrom(input, _repeated_serializeFullResourceSet_codec);
            break;
          }
          case 26: {
            serializeLocalResourceSet_.AddEntriesFrom(input, _repeated_serializeLocalResourceSet_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SerializeFunctionMetadataMap : pb::IMessage<SerializeFunctionMetadataMap> {
    private static readonly pb::MessageParser<SerializeFunctionMetadataMap> _parser = new pb::MessageParser<SerializeFunctionMetadataMap>(() => new SerializeFunctionMetadataMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SerializeFunctionMetadataMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeFunctionMetadataMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeFunctionMetadataMap(SerializeFunctionMetadataMap other) : this() {
      metadataMap_ = other.metadataMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeFunctionMetadataMap Clone() {
      return new SerializeFunctionMetadataMap(this);
    }

    /// <summary>Field number for the "MetadataMap" field.</summary>
    public const int MetadataMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::AElf.Kernel.FunctionMetadata>.Codec _map_metadataMap_codec
        = new pbc::MapField<string, global::AElf.Kernel.FunctionMetadata>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::AElf.Kernel.FunctionMetadata.Parser), 10);
    private readonly pbc::MapField<string, global::AElf.Kernel.FunctionMetadata> metadataMap_ = new pbc::MapField<string, global::AElf.Kernel.FunctionMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::AElf.Kernel.FunctionMetadata> MetadataMap {
      get { return metadataMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SerializeFunctionMetadataMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SerializeFunctionMetadataMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MetadataMap.Equals(other.MetadataMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MetadataMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      metadataMap_.WriteTo(output, _map_metadataMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metadataMap_.CalculateSize(_map_metadataMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SerializeFunctionMetadataMap other) {
      if (other == null) {
        return;
      }
      metadataMap_.Add(other.metadataMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metadataMap_.AddEntriesFrom(input, _map_metadataMap_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CallingGraphEdges : pb::IMessage<CallingGraphEdges> {
    private static readonly pb::MessageParser<CallingGraphEdges> _parser = new pb::MessageParser<CallingGraphEdges>(() => new CallingGraphEdges());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallingGraphEdges> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallingGraphEdges() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallingGraphEdges(CallingGraphEdges other) : this() {
      edges_ = other.edges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallingGraphEdges Clone() {
      return new CallingGraphEdges(this);
    }

    /// <summary>Field number for the "Edges" field.</summary>
    public const int EdgesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Kernel.GraphEdge> _repeated_edges_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Kernel.GraphEdge.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.GraphEdge> edges_ = new pbc::RepeatedField<global::AElf.Kernel.GraphEdge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.GraphEdge> Edges {
      get { return edges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallingGraphEdges);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallingGraphEdges other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!edges_.Equals(other.edges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= edges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      edges_.WriteTo(output, _repeated_edges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += edges_.CalculateSize(_repeated_edges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallingGraphEdges other) {
      if (other == null) {
        return;
      }
      edges_.Add(other.edges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            edges_.AddEntriesFrom(input, _repeated_edges_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GraphEdge : pb::IMessage<GraphEdge> {
    private static readonly pb::MessageParser<GraphEdge> _parser = new pb::MessageParser<GraphEdge>(() => new GraphEdge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GraphEdge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ConcurrencyReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphEdge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphEdge(GraphEdge other) : this() {
      source_ = other.source_;
      target_ = other.target_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphEdge Clone() {
      return new GraphEdge(this);
    }

    /// <summary>Field number for the "Source" field.</summary>
    public const int SourceFieldNumber = 1;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Target" field.</summary>
    public const int TargetFieldNumber = 2;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GraphEdge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GraphEdge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Source != other.Source) return false;
      if (Target != other.Target) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GraphEdge other) {
      if (other == null) {
        return;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            Target = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
